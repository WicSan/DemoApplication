# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- feature/*
- release/*

pool:
  name: 'Self-Hosted'

variables:
  imageName: 'demo-application'
  GitVersion.FullSemVer: ''
  fullSemVer: $[replace(variables['GitVersion.FullSemVer'], '+', '_')]

steps:

- task: Bash@3
  displayName: Print environment
  inputs:
    targetType: 'inline'
    script: env | sort

- task: gitversion/setup@0
  displayName: Install GitVersion
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: Determine Version

- bash: |
      compatibaleFullSemVer=${$(GitVersion.FullSemVer)/+/_}
      echo "##vso[task.setvariable variable=compatibaleFullSemVer]$compatibaleFullSemVer"

- task: Docker@2
  inputs:
    containerRegistry: 'Local docker registry'
    repository: '$(imageName)'
    command: 'buildAndPush'
    Dockerfile: 'DemoApplication/Dockerfile'
    tags: '$(fullSemVer)'

- task: HelmDeploy@0
  displayName: Helm package
  inputs:
    command: 'package'
    chartPath: 'deployment/helm/demo-application'
    chartVersion: '$(fullSemVer)'
    destination: '$(Build.ArtifactStagingDirectory)/helm/charts'
    arguments: '--app-version $(fullSemVer)'

- task: OctopusPush@4
  inputs:
    OctoConnectedServiceName: 'Local octopus server'
    Space: 'Spaces-1'
    Package: '$(Build.ArtifactStagingDirectory)/helm/charts/*.tgz'
    Replace: 'true'

- task: OctopusCreateRelease@4
  inputs:
    OctoConnectedServiceName: 'Local octopus server'
    Space: 'Spaces-1'
    ProjectGroup: 'ProjectGroups-1'
    ProjectName: 'Projects-1'
    ReleaseNumber: '$(GitVersion.FullSemVer)'
    Channel: 'Channels-1'